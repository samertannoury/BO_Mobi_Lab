@model HRManagmentBO.Models.LoginModel

@{
    ViewBag.Title = "Log in";
}
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>

    <meta charset="utf-8">
    <title>Login</title>
    <link href="~/Content/Login.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <script src="~/Scripts/angular.js"></script>
    <script src="~/Scripts/jquery.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        window.onload = function () {
            document.title = "Back Office";
            document.getElementById("txtUsername").focus();
        };
        var lastindex;
        function mouseClick(obj) {
            var obj = document.getElementById('txtPassword');
            obj.type = "text";
            obj.focus();
        }
        function mouseOut(obj) {

            var obj = document.getElementById('txtPassword');
            obj.type = "password";
            obj.focus();
        }
        function TextChange() {
            var txtPassword = document.getElementById('txtPassword');
            var imgShowPass = document.getElementById('imgShowPass');


            if (txtPassword.value == "") {
                imgShowPass.style.visibility = 'hidden';
            } else {
                imgShowPass.style.visibility = 'visible';
            }
        }
    </script>
    <style>
        input[type=text]::-ms-clear {
            display: none;
        }

        input[type=password]::-ms-reveal {
            display: none;
        }

        .specific_input_class::-ms-clear {
            display: none;
        }

        #specific_input_element::-ms-clear {
            display: none;
        }
    </style>

    <script src="~/Scripts/Encryption/aes.js"></script>
    <script src="~/Scripts/Encryption/hmac-md5.js"></script>
    <script src="~/Scripts/Encryption/hmac-ripemd160.js"></script>
    <script src="~/Scripts/Encryption/hmac-sha1.js"></script>
    <script src="~/Scripts/Encryption/hmac-sha224.js"></script>
    <script src="~/Scripts/Encryption/hmac-sha256.js"></script>
    <script src="~/Scripts/Encryption/hmac-sha3.js"></script>
    <script src="~/Scripts/Encryption/hmac-sha384.js"></script>
    <script src="~/Scripts/Encryption/hmac-sha512.js"></script>
    <script src="~/Scripts/Encryption/md5.js"></script>
    <script src="~/Scripts/Encryption/pbkdf2.js"></script>
    <script src="~/Scripts/Encryption/rabbit-legacy.js"></script>
    <script src="~/Scripts/Encryption/rabbit.js"></script>
    <script src="~/Scripts/Encryption/rc4.js"></script>
    <script src="~/Scripts/Encryption/ripemd160.js"></script>
    <script src="~/Scripts/Encryption/sha1.js"></script>
    <script src="~/Scripts/Encryption/sha224.js"></script>
    <script src="~/Scripts/Encryption/sha256.js"></script>
    <script src="~/Scripts/Encryption/sha3.js"></script>
    <script src="~/Scripts/Encryption/sha384.js"></script>
    <script src="~/Scripts/Encryption/sha512.js"></script>
    <script src="~/Scripts/Encryption/tripledes.js"></script>
    <script src="~/Scripts/date.js"></script>

    <script type="text/javascript">




        var strusername = "@Html.DisplayFor(m => m.strusername)";

    var Crypt = new Crypt();  // constructor
    var Wrongpin = 0;

    function LogIn() {

        var txtUsername = document.getElementById('txtUsername');

        
    
                var mydate = new Date();
                var str = mydate.toString("yyyyMMddHHmmss");

                var txtTimeStamp = document.getElementById('txtTimeStamp');
                txtTimeStamp.value = str;
                var txtPassword = document.getElementById('txtPassword');
                var txtNewPassword = document.getElementById('txtNewPassword');
                var Key = CryptoJS.enc.Utf8.parse(str + "U1DWUZCRVFGV1VVT0=");
                var IV = CryptoJS.enc.Utf8.parse("YWlFLVEZZUFNaWl=");
                var encryptedText = CryptoJS.AES.encrypt(txtPassword.value, Key, { iv: IV, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
                //var decrypted = CryptoJS.AES.decrypt(encrypted, "Secret Passphrase");
                txtNewPassword.value = encryptedText;
                txtNewPassword.value = encryptedlogin;
                $("#btn").submit();

   }

        function makeid(length) {
            var text = "";
            var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

            for (var i = 0; i < length; i++)
                text += possible.charAt(Math.floor(Math.random() * possible.length));

            return text;
        }



    </script>



</head>

<body>




    <div class="outer">
        <div class="middle">
            <div id="divElement">
                @using (Html.BeginForm("Login", "Account"))
                {

                    @Html.HiddenFor(m => m.TimeStamp, new
                    {
                        @id = "txtTimeStamp"
                    })

                    @Html.HiddenFor(m => m.strusername, new
                   {
                       @id = "strusername"
                   })

                    @Html.HiddenFor(m => m.Password, new
                    {
                        @id = "txtNewPassword"
                    })


                    <span class="Title">
                        @Html.HiddenFor(m => m.ApplicationName)
                        @Html.DisplayFor(m => m.ApplicationName)
                    </span>
                    <br />
                    <br />
                    <style>

                        .fake-input {
                        }
                    </style>
                    @Html.TextBoxFor(m => m.UserName,
                    new
                    {
                        @class = "txt",
                        @placeholder = "Username",
                        @id="txtUsername",
                        @autocomplete = "off" ,

                    })


                    @Html.HiddenFor(m => m.UserName)
                    <img src="~/Content/Images/User%20icon.jpg" style="position: relative; top: 0px; right: 234px; width: 20px; " />


                    <br />
                    <input type="password" onkeyup="TextChange();" class="txt" placeholder="Password" id="txtPassword" onkeypress="capLock(event)" onfocus="capLock(event)" autocomplete="off" />


                    <img src="~/Content/Images/Password.jpg" style="position: relative; top: 0px; right: 234px; width: 20px; " />


                    <img src="~/Content/Images/eye1-01-128.png" id="imgShowPass" onmouseup="mouseOut();" onmouseout="mouseOut();" onmousedown="mouseClick();"
                         style="width: 27px; height: 26px; visibility: hidden; margin-left: -60px; " />
                    <br />

                    <button id="btn" onclick="LogIn();">Log in</button>
                    <br />

                    <div style="height: 100px; width: 647px;">

                        <span class="ErrorMsg">
                            @Html.ValidationMessageFor(m => m.UserName)
                        </span>
                        <span class="ErrorMsg">
                            @Html.ValidationMessageFor(m => m.Password)
                        </span>
                        <span class="ErrorMsg">
                            @Html.DisplayFor(m => m.Error)
                        </span>

                        <div class="ErrorMsg" id="divMayus" style="visibility:hidden">Caps Lock is on.</div>



                    </div>

                }

            </div>
        </div>
    </div>
</body>
</html>




<script>
    var input = document.getElementById("txtPassword");
    var text = document.getElementById("divMayus");
    input.addEventListener("keyup", function (event) {

        if (event.getModifierState("CapsLock")) {
            document.getElementById('divMayus').style.visibility = 'visible';
        } else {
            document.getElementById('divMayus').style.visibility = 'hidden';
        }
    });
    function capLock(e) {
        kc = e.keyCode ? e.keyCode : e.which;
        sk = e.shiftKey ? e.shiftKey : ((kc == 16) ? true : false);
        if (((kc >= 65 && kc <= 90) && !sk) || ((kc >= 97 && kc <= 122) && sk))
            document.getElementById('divMayus').style.visibility = 'visible';
        else
            document.getElementById('divMayus').style.visibility = 'hidden';
    }


    input.focus(function () {

        kc = e.keyCode ? e.keyCode : e.which;
        sk = e.shiftKey ? e.shiftKey : ((kc == 16) ? true : false);
        if (((kc >= 65 && kc <= 90) && !sk) || ((kc >= 97 && kc <= 122) && sk))
            document.getElementById('divMayus').style.visibility = 'visible';
        else
            document.getElementById('divMayus').style.visibility = 'hidden';
    });


</script>