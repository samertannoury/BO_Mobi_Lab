
@{
    ViewBag.Title = "Employee";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<head>
    <link href="~/Content/main.css" rel="stylesheet" />

    <script>
        var app = angular.module('MyApp', ['angularUtils.directives.dirPagination',  'ngDialog']);
            app.filter('customNumber', function () {
                return function (value) {
                    if (value == null || value == "") {
                        return "";
                    }
                    try {
                        var aa = parseInt(value, 10);
                        return aa;
                    } catch (e) {
                        return value;
                    }
                }
            });

        app.config(['ngDialogProvider', function (ngDialogProvider) {
            ngDialogProvider.setDefaults({
                className: 'ngdialog-theme-default',
                plain: false,
                showClose: true,
                closeByDocument: true,
                closeByEscape: true,
                appendTo: false,
                preCloseCallback: function () {
                    console.log('default pre-close callback');
                }
            });
        }]);



        app.controller('validateCtrl', function ($scope, $http, $filter, ngDialog) {
                $scope.showErrorLogs = false;
                $scope.AddMode = false;
                $scope.editMode = false;

                $scope.statuslst = [];
                $scope.ActiveChecked = true;
                $scope.statuslst.push("Active");
                $scope.StatusChecked = function () {

                    $scope.statuslst = [];
                    if ($scope.ActiveChecked == true) {

                        $scope.statuslst.push("Active");
                    }
                    if ($scope.InactiveChecked == true) {

                        $scope.statuslst.push("Inactive");
                    }
                    getAllData();
                }

                $scope.Pages = [
                    {
                        id: '5',
                        name: '5'
                    }, {
                        id: '10',
                        name: '10'
                    }, {
                        id: '15',
                        name: '15'
                    }, {
                        id: '20',
                        name: '20'
                    }
                ];

                $scope.Visibility = [
                    {
                        id: '0',
                        name: 'false'
                    }, {
                        id: '1',
                        name: 'true'
                    }
                ];

                $scope.selectedPage = $scope.Pages[2];

                var config = {
                    headers: {
                        'Content-Type': 'application/json;charset=utf-8'
                    }
                }

                getAllData();

                function getAllData() {
                    $("#wait").css("display", "block");

                    $http.post('@Url.Action("GetEmployee", "Employee")', JSON.stringify({ Statuslst: $scope.statuslst }), config)
                        .success(function (data, status, headers, config) {
                            $("#wait").css("display", "none");

                            if (data.flag != -1) {
                                $scope.Employeelst = data.Employeelst;
                                if (data.Employeelst.length > 5) {
                                    $scope.emptyList = false;
                                } else {
                                    $scope.emptyList = true;
                                }
                                $scope.EmployeePositionlst.data.EmployeePositionlst;
                                $scope.Departmentlst = data.Departmentlst;


                                $scope.AddPermission = data.AddPermission;
                                $scope.EditPermission = data.EditPermission;
                                $scope.DeletePermission = data.DeletePermission;




                                if ($scope.selectedPage.name > $scope.Employeelst.length) {
                                    $scope.NumRows = "1-" + $scope.Employeelst.length + " out of " + ($scope.Employeelst.length);
                                } else {
                                    $scope.NumRows = "1-" + $scope.selectedPage.name + " out of " + ($scope.Employeelst.length);

                                }
                                for (i = 0; i < $scope.Employeelst.length; i++) {
                                    $scope.Employeelst[i].editFName = $scope.Employeelst[i].FName
                                    $scope.Employeelst[i].editMName = $scope.Employeelst[i].MName
                                    $scope.Employeelst[i].editLName = $scope.Employeelst[i].LName
                                    $scope.Employeelst[i].editMobileNo = $scope.Employeelst[i].MobileNo
                                    $scope.Employeelst[i].editSalary = $scope.Employeelst[i].Salary
                                    $scope.Employeelst[i].editPositionID = $scope.Employeelst[i].PositionID
                                    $scope.Employeelst[i].editDepartmentID = $scope.Employeelst[i].DepartmentID
                                    $scope.Employeelst[i].editStatus = $scope.Employeelst[i].Status
                                }

                                var itempage =
                                             {
                                                 id: $scope.Employeelst.length,
                                                 name: $scope.Employeelst.length
                                };

                                $scope.Pages.push(itempage);
                            }

                            else if (data.flag == "-1") {
                                Alert("Error: "+ data.text);
                            }

                            else if (data.flag == "-4") {
                                Alert("Warning: "+ data.text, "W");
                            }
                        })
                        .error(function (data, status, header, config) {
                            Alert("Error: "+ "Error in connection");
                            $("#wait").css("display", "none");
                        });
            }



            
            
            $scope.GetPosition = function (id) {

                var desc = "";
                angular.forEach($scope.EmployeePositionlst, function (value, key) {
                    if (value.Id == id) {

                        desc = value.Description;
                    }

                });
                return desc;
            }


            $scope.GetDepartment = function (id) {

                var desc = "";
                angular.forEach($scope.Departmentlst, function (value, key) {
                    if (value.Id == id) {

                        desc = value.Name;
                    }

                });
                return desc;
            }


                $scope.UpdateRow = function (item) {
                    $("#wait").css("display", "block");
                    var config = {
                        headers: {
                            'Content-Type': 'application/json;charset=utf-8'
                        }
                    }

                    if (item.editStatus == "" || item.editStatus == null || item.editDescription == "" || item.editDescription == null || item.editName == "" || item.editName == null) {
                        Alert("Warning: "+ "Kindly fill empty fields before proceeding", "W");
                        $("#wait").css("display", "none");
                        return;
                    }

                    var Status = angular.copy(item.Status);
                    var Description = angular.copy(item.Description);
                    var Name = angular.copy(item.Name);
                    item.Status = item.editStatus;
                    item.Description = item.editDescription;
                    item.Name = item.editName;
                    $http.post('@Url.Action("UpdateDepartment", "Employee")', JSON.stringify({ doEmployee: item }), config)
                    .success(function (data, status, headers, config) {
                        $("#wait").css("display", "none");

                        if (data.flag == "-3") {
                            SessionTimedOut("Information", data.text, "OK", data.URL);
                        } else if (data.flag == "-4") {
                            Alert("Warning: "+ data.text, "W");
                        } else if (data.flag == "-1") {
                            item.Status = Status;
                            item.Description = Description;
                            Alert("Error: "+ data.text);
                        } else {
                            Alert("Success: "  + data.text);
                                getAllData();
                            $scope.editMode = false;
                            $scope.editing == null;
                        }

                    })
                    .error(function (data, status, header, config) {
                        Alert("Error: "+ "Error in connection");
                        $("#wait").css("display", "none");
                    });
                }


                $scope.DeleteRow = function (item) {
                    $("#wait").css("display", "block");
                    var config = {
                        headers: {
                            'Content-Type': 'application/json;charset=utf-8'
                        }
                    }

                    $http.post('@Url.Action("DeleteEmployee", "Employee")', JSON.stringify({ Id: item }), config)
                    .success(function (data, status, headers, config) {
                        $("#wait").css("display", "none");

                        if (data.flag == "-3") {
                            SessionTimedOut("Information", data.text, "OK", data.URL);
                        } else if (data.flag == "-4") {
                            Alert("Warning: "+ data.text, "W");
                        } else if (data.flag == "-1") {

                            Alert("Error: "+ data.text);
                        } else {
                            Alert("Success");
                        }

                    })
                    .error(function (data, status, header, config) {
                        Alert("Error: "+ "Error in connection");
                        $("#wait").css("display", "none");
                    });
                }


                $scope.AddEmployee = function (item) {
                    $("#wait").css("display", "block");
                    var config = {
                        headers: {
                            'Content-Type': 'application/json;charset=utf-8'
                        }
                    }

                    if (item == null || item.Name == "" || item.Name == null || item.Description == "" || item.Description == null) {
                        Alert("Warning: "+ "Kindly fill all fields before proceeding", "W");
                        $("#wait").css("display", "none");
                        return;
                    }

                    $http.post('@Url.Action("AddEmployee", "Employee")', JSON.stringify({ doEmployee: item }), config)
                        .success(function (data, status, headers, config) {
                            $("#wait").css("display", "none");
                            if (data.flag == "-3") {
                            SessionTimedOut("Information", data.text, "OK", data.URL);
                            }
                            else if (data.flag == "-1") {
                                Alert("Error: "+ data.text);
                            } else if (data.flag == "-4") {
                                Alert("Warning: "+ data.text, "W");
                            } else {


                                    $scope.tempEmployeelst = angular.copy($scope.Employeelst);

                                $scope.AddMode = false;
                                getAllData();
                            }
                        })
                        .error(function (data, status, header, config) {
                            Alert("Error: "+ "Error in connection");
                            $("#wait").css("display", "none");
                        });
                }

                $scope.EditRow = function (item) {
                $scope.editing = $scope.Employeelst.indexOf(item);
                $scope.tempEmployeelst = angular.copy($scope.Employeelst);
                }

                $scope.CancelEdit = function () {
                    $scope.Employeelst = angular.copy($scope.tempEmployeelst);
                    $scope.editing == null;
                }

                $scope.Search = function () {
                    if ($scope.FilterValue == "" || $scope.FilterValue == null) { $scope.selectedPage = $scope.Pages[2]; }
                    else { $scope.selectedPage = $scope.Pages[4]; }
                }

                $scope.paginationchanged = function () {
                    $scope.NumRows = "1-" + $scope.selectedPage.name + " out of " + ($scope.Employeelst.length);
                }

                $scope.Pagechanged = function (item) {

                    var div = $scope.Employeelst.length / $scope.selectedPage.name

                    if (div < item) {
                        var quotient = Math.floor($scope.Employeelst.length / $scope.selectedPage.name);

                        $scope.NumRows = (quotient * $scope.selectedPage.name + 1) + "-" + $scope.Employeelst.length + " out of " + ($scope.Employeelst.length);
                    }
                    else {
                        $scope.NumRows = 1 + (item - 1) * $scope.selectedPage.name + "-" + item * $scope.selectedPage.name + " out of " + ($scope.Employeelst.length);
                    }
                }

                $scope.numSort = 0;

                $scope.sort = function (keyname, imgID) {

                    document.getElementById("imgId").style.visibility = 'hidden';
                    document.getElementById("imgFName").style.visibility = 'hidden';
                    document.getElementById("imgMName").style.visibility = 'hidden';
                    document.getElementById("imgLName").style.visibility = 'hidden';
                    document.getElementById("imgDOB").style.visibility = 'hidden';
                    document.getElementById("imgMobileNo").style.visibility = 'hidden';
                    document.getElementById("imgSalary").style.visibility = 'hidden';
                    document.getElementById("imgPositionID").style.visibility = 'hidden';
                    document.getElementById("imgDepartmentID").style.visibility = 'hidden';
                    document.getElementById("imgStatus").style.visibility = 'hidden';

                    document.getElementById(imgID).style.visibility = 'visible';

                    if ($scope.sortKey == keyname) {
                        $scope.reverse = !$scope.reverse;
                        $scope.numSort += 1;
                        if ($scope.numSort % 2 == 1) {
                            document.getElementById(imgID).src = "../Content/Images/ArrowDown.png";
                        } else {
                            document.getElementById(imgID).src = "../Content/Images/ArrowUp.png";
                        }
                    } else {
                        $scope.sortKey = keyname;
                        $scope.reverse = false;
                        document.getElementById(imgID).src = "../Content/Images/ArrowUp.png";
                        $scope.numSort = 0;

                    }
                }

                $scope.AddRow = function () {
                    $scope.AddMode = true;
                }

                $scope.RemoveAddNewRow = function () {
                    $scope.AddMode = false;
                }



            });


    </script>

    <title></title>

    <style>


        .checkmark {
            position: absolute;
            top: 0;
            left: 0;
            height: 20px;
            width: 20px;
            background-color: #fff;
        }

        [ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {
            display: none !important;
        }
    </style>

</head>

<body ng-app="MyApp" ng-controller="validateCtrl" style="overflow-x: auto;margin-top:5%;">
    <div id="wait" style="display:none;width:69px;height:89px;border:none;position:absolute;top:50%;left:50%;padding:2px;"><img src="~/Content/Images/loader.gif" width="64" height="64" /></div>





    <div class="col-lg-12">

        <div class="col-lg-11">
            <div class="col-lg-3">
                <label>Filter: <input ng-model="FilterValue" ng-change="Search()"></label>
            </div>

            <div class="col-lg-1">
                <label class="container">
                    Active
                    <input type="checkbox" ng-model="ActiveChecked" ng-change="StatusChecked();">
                    <span class="checkmark"></span>
                </label>
            </div>
            <div class="col-lg-1">
                <label class="container">
                    Inactive
                    <input type="checkbox" checked="checked" ng-model="InactiveChecked" ng-change="StatusChecked();">
                    <span class="checkmark"></span>
                </label>
            </div>

        </div>
    </div>

    <div class="col-lg-11">
    </div>
    <div class="col-lg-1" ng-show="AddPermission || EditPermission">
        <button class="btn  btn-sm rounded-0" type="button" data-toggle="tooltip" data-placement="top" style="float:right;" title="Add" ng-click="AddRow()" ng-hide="AddMode"><i class="fa fa-plus"></i></button>
        <button class="btn  btn-sm rounded-0" type="button" data-toggle="tooltip" data-placement="top" style="float:right;" title="Remove" ng-click="RemoveAddNewRow()" ng-show="AddMode"><i class="fa fa-minus"></i></button>
    </div>


    <table class="table table-hover" ng-table="ASBBranchesTable" ng-cloak>

        <caption ng-bind="NumRows"></caption>
        <thead>
            <tr>

                <th ng-click="sort('Id','imgId')">ID<img id="imgId" style=" width: 20px;visibility: hidden;" /></th>
                <th ng-click="sort('FName','imgFName')">FName<img id="imgFName" style=" width: 20px;visibility: hidden;" /></th>
                <th ng-click="sort('MName','imgMName')">MName<img id="imgMName" style=" width: 20px;visibility: hidden;" /></th>
                <th ng-click="sort('LName','imgLName')">LName<img id="imgLName" style=" width: 20px;visibility: hidden;" /></th>
                <th ng-click="sort('DOB','imgDOB')">DOB<img id="imgId" style=" width: 20px;visibility: hidden;" /></th>
                <th ng-click="sort('MobileNo','imgMobileNo')">MobileNo<img id="imgMobileNo" style=" width: 20px;visibility: hidden;" /></th>
                <th ng-click="sort('Salary','imgSalary')">Salary<img id="imgSalary" style=" width: 20px;visibility: hidden;" /></th>
                <th ng-click="sort('PositionID','imgPositionID')">Position<img id="imgPositionID" style=" width: 20px;visibility: hidden;" /></th>
                <th ng-click="sort('DepartmentID','imgDepartmentID')">Department<img id="imgDepartmentID" style=" width: 20px;visibility: hidden;" /></th>
                <th ng-click="sort('Status','imgStatus')">Status<img id="imgStatus" style=" width: 20px;visibility: hidden;" /></th>
                <th></th>
            </tr>
        </thead>

        <tbody>

            <tr class="trgrv" ng-show="AddMode">

                <td></td>
                <td><input type="text" ng-model="newItem.FName" style="width:100%;" /></td>
                <td><input type="text" ng-model="newItem.MName" style="width:100%;" /></td>
                <td><input type="text" ng-model="newItem.LName" style="width:100%;" /></td>
                <td><input type="text" ng-model="newItem.DOB" style="width:100%;" /></td>
                <td><input type="text" ng-model="newItem.MobileNo" style="width:100%;" /></td>
                <td><input type="text" ng-model="newItem.Salary" style="width:100%;" /></td>


                
                <td>
                    <select class="selectpicker" ng-model="newItem.PositionID"
                            ng-options="o.Id as o.Description for o in EmployeePositionlst"></select>
                </td>

                <td>
                    <select class="selectpicker" ng-model="newItem.DepartmentID"
                            ng-options="o.Id as o.Name for o in Departmentlst"></select>
                </td>

                <td>
                    Active
                </td>

                <td>
                    <ul class="list-inline m-0" style="text-align:right !important;" ng-show="AddPermission">

                        <li class="list-inline-item">
                            <button ng-show="AddPermission" class="btn  btn-sm rounded-0" type="button" data-toggle="tooltip" data-placement="top" title="Add" ng-click="AddEmployee(newItem)"><i class="fa fa-check"></i></button>
                        </li>






                    </ul>
                </td>
            </tr>

            <tr class="trgrv" dir-paginate="item in Employeelst | orderBy:sortKey:reverse | itemsPerPage:selectedPage.id | filter: FilterValue" style="border: 2px solid; height: 30px; border-color: #EFEFEF;">

                <td>
                    <span ng-bind="item.Id"></span>
                </td>

                <td>
                    <span ng-bind="item.FName" ng-show="!editMode"></span>
                    <input type="text" ng-show="editMode" ng-model="item.editFName" style="width:100%;" />
                </td>

                <td>
                    <span ng-bind="item.MName" ng-show="!editMode"></span>
                    <input type="text" ng-show="editMode" ng-model="item.editMName" style="width:100%;" />
                </td>


                <td>
                    <span ng-bind="item.LName" ng-show="!editMode"></span>
                    <input type="text" ng-show="editMode" ng-model="item.editLName" style="width:100%;" />
                </td>


                <td>
                    <span ng-bind="item.DOB" ng-show="!editMode"></span>
                    <input type="text" ng-show="editMode" ng-model="item.editDOB" style="width:100%;" />
                </td>

                <td>
                    <span ng-bind="item.MobileNo" ng-show="!editMode"></span>
                    <input type="text" ng-show="editMode" ng-model="item.editMobileNo" style="width:100%;" />
                </td>

                <td>
                    <span ng-bind="item.Salary" ng-show="!editMode"></span>
                    <input type="text" ng-show="editMode" ng-model="item.editSalary" style="width:100%;" />
                </td>




                <td>
                    <span ng-bind="GetPosition(item.PositionID)" ng-show="!editMode"></span>
                    <select class="selectpicker" ng-model="item.editPositionID" ng-show="editMode"
                            ng-options="o.Id as o.Description for o in EmployeePositionlst"></select>

                </td>




                <td>
                    <span ng-bind="GetDepartment(item.DepartmentID)" ng-show="!editMode"></span>
                    <select class="selectpicker" ng-model="item.DepartmentID" ng-show="editMode"
                            ng-options="o.Id as o.Description for o in EmployeePositionlst"></select>

                </td>

            


                <td>
                    <span ng-bind="item.Status" ng-show="!editMode"></span>
                    <select ng-model="item.editStatus" ng-show="editMode">
                        <option value="Active">Active
                        <option value="Inactive">Inactive
                    </select>
                </td>


                <td>


                    <ul class="list-inline m-0" style="text-align:right !important;">
                        <li class="list-inline-item" ng-show="editMode">
                            <button class="btn  btn-sm rounded-0" type="button" data-toggle="tooltip" data-placement="top" title="Edit" ng-click="editMode = false;CancelEdit();"><i class="fa fa-minus"></i></button>
                        </li>




                        <li class="list-inline-item" ng-show="editMode">
                            <button class="btn  btn-sm rounded-0" type="button" data-toggle="tooltip" data-placement="top" title="Edit" ng-click="editMode = false;UpdateRow(item);"><i class="fa fa-check"></i></button>
                        </li>
                        <li class="list-inline-item" ng-hide="editMode">

                            <button class="btn  btn-sm rounded-0" type="button" data-toggle="tooltip" data-placement="top" title="Edit" ng-click="editMode = true;EditRow(item)"><i class="fa fa-pencil"></i></button>
                        </li>

                        <li class="list-inline-item" ng-show="DeletePermission">
                            <button class="btn  btn-sm rounded-0" type="button" data-toggle="tooltip" data-placement="top" title="Delete" ng-click="DeleteRow(item.Id)"><i class="fa fa-trash-o"></i></button>
                        </li>



                    </ul>


                </td>





            </tr>

        </tbody>

    </table>

    <table style=" width: 51%;" ng-hide="emptyList">
        <tr style="width:100%;">
            <td>

                <dir-pagination-controls max-size="5"
                                         direction-links="true"
                                         boundary-links="true"
                                         on-page-change="Pagechanged(newPageNumber)">
                </dir-pagination-controls>
            </td>
            <td>

                <select style="height: 36px; width: 21%; " data-ng-options="o.name for o in Pages" data-ng-model="selectedPage" ng-change="paginationchanged()"></select>
                <span style="color: #BFBFBE;">
                    (No. of Displayed Records)
                </span>

            </td>
        </tr>

    </table>



</body>

